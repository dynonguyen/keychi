definitions:
  common.AppError:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/common.I18nCode'
        description: Client error code (i18n key)
      message:
        type: string
      status:
        type: integer
    type: object
  common.I18nCode:
    enum:
    - INTERNAL_SERVER_ERROR
    - BAD_REQUEST
    - UNAUTHORIZED
    type: string
    x-enum-varnames:
    - CodeInternalServerError
    - CodeBadRequestError
    - CodeUnauthorizedError
  dto.HealthCheckResponse:
    properties:
      dbConnected:
        type: boolean
    type: object
  dto.UserLoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.UserRegistrationInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      pwdHint:
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.UserToken:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
info:
  contact:
    name: Keychi Team
    url: https://github.com/dynonguyen/keychi
  description: Keychi | The best password manager for securely storing, managing data
    such as passwords, passkeys, OTP and credit cards.
  title: Keychi API
  version: "1.0"
paths:
  /admin/health-check:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HealthCheckResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - Bearer: []
      summary: Health check
      tags:
      - Admin
  /login:
    post:
      parameters:
      - description: User login input
        in: body
        name: user
        schema:
          $ref: '#/definitions/dto.UserLoginInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Login
      tags:
      - User
  /user:
    post:
      parameters:
      - description: dto.UserRegistrationInput
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegistrationInput'
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Register a new user
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Manage services, health check and other admin tasks.
  name: Admin
- description: Manage user account, authentication and authorization.
  name: User
