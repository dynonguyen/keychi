{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Keychi | The best password manager for securely storing, managing data such as passwords, passkeys, OTP and credit cards.",
        "title": "Keychi API",
        "contact": {
            "name": "Keychi Team",
            "url": "https://github.com/dynonguyen/keychi"
        },
        "version": "1.0"
    },
    "paths": {
        "/admin/health-check": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthCheckResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login input",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "description": "User logout input",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLogout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "dto.UserRegistrationInput",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegistrationInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.EntityCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/vault": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Create a new vault",
                "parameters": [
                    {
                        "description": "New vault information",
                        "name": "vault",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NewVaultInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.EntityCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/vault/folder": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Create a new folder",
                "parameters": [
                    {
                        "description": "New folder information",
                        "name": "folder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NewFolderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.EntityCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Update a folder",
                "parameters": [
                    {
                        "description": "updated folder information",
                        "name": "folder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFolderInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/vault/folder/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Delete a folder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/vault/folders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "List of user folders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Folder"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/vaults": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "List of user vaults",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Vault"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Client error code (i18n key)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.I18nCode"
                        }
                    ]
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "common.EntityCreationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "common.I18nCode": {
            "type": "string",
            "enum": [
                "INTERNAL_SERVER_ERROR",
                "BAD_REQUEST",
                "UNAUTHORIZED"
            ],
            "x-enum-varnames": [
                "CodeInternalServerError",
                "CodeBadRequestError",
                "CodeUnauthorizedError"
            ]
        },
        "common.Json": {
            "type": "object",
            "additionalProperties": {}
        },
        "dto.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "dbConnected": {
                    "type": "boolean"
                }
            }
        },
        "dto.NewFolderInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.NewVaultInput": {
            "type": "object",
            "required": [
                "name",
                "properties",
                "type"
            ],
            "properties": {
                "customFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.VaultCustomField"
                    }
                },
                "folderId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/entity.VaultProperties"
                },
                "type": {
                    "$ref": "#/definitions/entity.VaultType"
                }
            }
        },
        "dto.UpdateFolderInput": {
            "type": "object",
            "required": [
                "folderId"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "folderId": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserLogout": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "dto.UserProfile": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "preferences": {
                    "$ref": "#/definitions/model.UserPreferencesModel"
                },
                "pwdHint": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.UserRegistrationInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "pwdHint": {
                    "type": "string"
                }
            }
        },
        "dto.UserToken": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expiresIn": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "entity.KdfAlgorithm": {
            "type": "string",
            "enum": [
                "pbkdf2",
                "argon2"
            ],
            "x-enum-varnames": [
                "PBKDF2",
                "Argon2"
            ]
        },
        "entity.UserLanguage": {
            "type": "string",
            "enum": [
                "en",
                "vi"
            ],
            "x-enum-varnames": [
                "English",
                "Vietnamese"
            ]
        },
        "entity.UserThemeMode": {
            "type": "string",
            "enum": [
                "light",
                "dark",
                "system"
            ],
            "x-enum-varnames": [
                "Light",
                "Dark",
                "System"
            ]
        },
        "entity.VaultAction": {
            "type": "string",
            "enum": [
                "lock",
                "logout"
            ],
            "x-enum-varnames": [
                "Lock",
                "Logout"
            ]
        },
        "entity.VaultCustomField": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity.VaultProperties": {
            "type": "object",
            "additionalProperties": {}
        },
        "entity.VaultType": {
            "type": "string",
            "enum": [
                "login",
                "card"
            ],
            "x-enum-varnames": [
                "VaultTypeLogin",
                "VaultTypeCard"
            ]
        },
        "entity.VaultUpdateHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/common.Json"
                }
            }
        },
        "model.Folder": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.UserPreferencesModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "kdfAlgorithm": {
                    "$ref": "#/definitions/entity.KdfAlgorithm"
                },
                "kdfIterations": {
                    "type": "integer"
                },
                "kdfMemory": {
                    "type": "integer"
                },
                "kdfParallelism": {
                    "type": "integer"
                },
                "kdfSalt": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/entity.UserLanguage"
                },
                "theme": {
                    "$ref": "#/definitions/entity.UserThemeMode"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "vaultTimeout": {
                    "type": "integer"
                },
                "vaultTimeoutAction": {
                    "$ref": "#/definitions/entity.VaultAction"
                }
            }
        },
        "model.Vault": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "customFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.VaultCustomField"
                    }
                },
                "deleted": {
                    "type": "boolean"
                },
                "folderId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/entity.VaultProperties"
                },
                "type": {
                    "$ref": "#/definitions/entity.VaultType"
                },
                "updateHistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.VaultUpdateHistory"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Manage services, health check and other admin tasks.",
            "name": "Admin"
        },
        {
            "description": "Manage user account, authentication and authorization.",
            "name": "User"
        }
    ]
}