CREATE TABLE IF NOT EXISTS users (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,

	name TEXT NOT NULL,
	email VARCHAR(255) NOT NULL UNIQUE,
	avatar TEXT,
	pwd_hint TEXT,

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS folders (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	user_id INTEGER NOT NULL,

	name TEXT NOT NULL,
	icon TEXT,
	color TEXT,

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

	CONSTRAINT fk_folder_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS vaults (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	user_id INTEGER NOT NULL,
	folder_id INTEGER,

	name TEXT NOT NULL,
	type SMALLINT NOT NULL,
	custom_fields JSONB DEFAULT '[]'::jsonb,
	properties JSONB DEFAULT '{}'::jsonb,
	note TEXT,

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

	CONSTRAINT fk_vault_folder FOREIGN KEY (folder_id) REFERENCES folders(id),
	CONSTRAINT fk_vault_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS devices (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	user_id INTEGER NOT NULL,

	name TEXT NOT NULL,
	platform TEXT NOT NULL,
	ipv4 TEXT,
	active BOOLEAN DEFAULT TRUE,
	logged_at TIMESTAMP,

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

	CONSTRAINT fk_device_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS settings (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	user_id INTEGER NOT NULL,

	theme TEXT NOT NULL DEFAULT 'system',
	vault_timeout INTEGER NOT NULL DEFAULT 0,
	vault_timeout_action TEXT NOT NULL DEFAULT 'lock',
	language TEXT NOT NULL DEFAULT 'en',
	kdf_algorithm TEXT NOT NULL DEFAULT 'pbkdf2',
	kdf_iterations INTEGER NOT NULL DEFAULT 600000,

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

	CONSTRAINT fk_setting_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS keys (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	user_id INTEGER NOT NULL,

	api_keys JSONB DEFAULT '[]'::jsonb,
	pin TEXT,

	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

	CONSTRAINT fk_key_user FOREIGN KEY (user_id) REFERENCES users(id)
);